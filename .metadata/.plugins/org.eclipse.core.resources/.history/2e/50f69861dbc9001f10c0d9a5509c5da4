package com.projetoguga.demo.entities;

import java.util.ArrayList;
import java.util.List;

@Entity
public class Cart {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @OneToMany(mappedBy = "cart", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<CartItem> items = new ArrayList<>();

    @ManyToOne
    @JoinColumn(name = "user_id")  // Relacionamento com o usuário (supondo que você tenha uma classe User)
    private User user;

    public Cart() {
        // Construtor vazio necessário para o JPA
    }

    // Métodos auxiliares
    public void addItem(Product product, int quantity) {
        // Verifica se o item já existe no carrinho
        for (CartItem item : items) {
            if (item.getProduct().getId().equals(product.getId())) {
                item.setQuantity(item.getQuantity() + quantity);
                return;
            }
        }
        // Se o item não existir, adiciona um novo item ao carrinho
        items.add(new CartItem(this, product, quantity));
    }

    public void removeItem(Long productId) {
        items.removeIf(item -> item.getProduct().getId().equals(productId));
    }

    public double getTotal() {
        return items.stream()
                    .mapToDouble(item -> item.getProduct().getPrice() * item.getQuantity())
                    .sum();
    }

    // Getters e Setters
    public List<CartItem> getItems() {
        return items;
    }

    public Long getId() {
        return id;
    }

    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
    }
}
